---
name: Build Wheels on Release
on:
  release:
    types: [published]

jobs:
  build-wheels:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # macos - ARM
          - os: macos-latest
            architecture: arm64
            runner: macos-14 # m1
            python-version: "3.12"
          - os: macos-latest
            architecture: arm64
            runner: macos-14 # m1
            python-version: "3.11"
          # macos - x86
          - os: macos-latest
            architecture: x64
            runner: macos-13 # x86
            python-version: "3.12"
          - os: macos-latest
            architecture: x64
            runner: macos-13 # x86
            python-version: "3.11"
          # Ubuntu - x86 (Runs inside manylinux2014 container)
          - os: ubuntu-latest
            architecture: x64
            runner: ubuntu-latest
            python-version: "3.11"
          - os: ubuntu-latest
            architecture: x64
            runner: ubuntu-latest
            python-version: "3.12"
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Set up Python ${{ matrix.python-version }}
        if: runner.os != 'Linux'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install maturin (macOS only)
        if: runner.os != 'Linux'
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install maturin

      - name: Build wheels using maturin in manylinux2014
        if: runner.os == 'Linux'
        run: |
          docker run --rm \
            --volume $PWD:/io \
            --workdir /io \
            quay.io/pypa/manylinux2014_x86_64 bash -c "
              PYVER=${{ matrix.python-version }} && PYVER=\${PYVER//./}
              PYBIN=\$(ls -d /opt/python/cp\${PYVER}-*/bin | tail -n 1)
              \$PYBIN/pip install maturin
              \$PYBIN/maturin build --release --strip --manylinux 2014 --sdist
            "

      - name: Build wheels (macOS)
        if: runner.os != 'Linux'
        run: |
          . venv/bin/activate
          maturin build --release --strip --sdist

      - name: List wheel artifacts
        run: ls -lash target/wheels

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.runner }}-py${{ matrix.python-version }}
          path: target/wheels/*.whl

  upload-release:
     needs: [build-wheels]
     runs-on: ubuntu-latest
     steps:
       - name: Download wheel artifacts
         uses: actions/download-artifact@v4
         with:
           path: ./wheels

       - name: List downloaded wheels
         run: ls -l wheels/*

       - name: Upload Wheels to Release
         uses: svenstaro/upload-release-action@v2
         with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: wheels/**/*.whl
           tag: ${{ github.event.release.tag_name }}
           file_glob: true
